{"pageProps":{"postData":{"id":"2017-03-04-counting-git-commits","year":"2017","title":"นับคอมมิทใน git repo กันดีกว่า","date":"04-03-2017 01:17","tags":["git"],"excerpt":"เป็นธรรมดาที่เมื่อถึงจุดๆ นึงก็จะอยากรู้ว่าเราทำอะไรไปบ้างแล้ว มากขนาดไหนกัน โดยเฉพาะเมื่อใช้ git ที่บันทึกทุกอย่างตั้งแต่เริ่มสร้าง repo ยิ่งน่าสนใจ คำตอบของคำถามที่เป็นชื่อของโพสต์นี้ก็ไม่ยากเลย กูเกิลสิครับ ปะ ขอแบ่งเป็นนับแยกกับนับรวมละกัน","contentHtml":"<p>เป็นธรรมดาที่เมื่อถึงจุดๆ นึงก็จะอยากรู้ว่าเราทำอะไรไปบ้างแล้ว มากขนาดไหนกัน โดยเฉพาะเมื่อใช้ git ที่บันทึกทุกอย่างตั้งแต่เริ่มสร้าง repo ยิ่งน่าสนใจ คำตอบของคำถามที่เป็นชื่อของโพสต์นี้ก็ไม่ยากเลย กูเกิลสิครับ ปะ ขอแบ่งเป็นนับแยกกับนับรวมละกัน</p>\n<h3>นับแยก author</h3>\n<p>อันนี้จะใช้ <code>shortlog</code> ซึ่งก็เป็นคำสั่งของ git นี่แหละ ถ้ารัน <code>git shortlog</code> เฉยๆ ก็เหมือนปริ้นท์หน้าคอมมิทบน Github หรือ Bitbucket มาดูนั่นแหละ เพราะฉะนั้นมันจึงมี option ให้ใช้ ถ้าจะนับคอมมิททั้งหมดแยกตาม author โดยเรียงจากมากไปน้อยก็</p>\n<pre><code class=\"language-sh\">git shortlog -s -n | cat\n</code></pre>\n<p>โดย <code>-s</code> คือเอามาแต่ author กับจำนวน ไม่เอาข้อความ ส่วน <code>-n</code> ก็เรียงโดยจำนวนคอมมิทแทนที่จะเรียงตามอักษรแทน สุดท้าย <code>| cat</code> ก็คือให้แสดงผลในบรรทัดต่อไปแทนที่จะเข้าไปใน read-only text file เอ้อ เกือบลืม อันนี้คือจะนับเฉพาะใน master branch เท่านั้นนะ ถ้ามีคอมมิทใน branch อื่นและยังไม่ได้ merge ก็จะไม่นับ ถ้าอยากนับทั้งหมดรวมพวกนั้นด้วยก็นี่เลย</p>\n<pre><code class=\"language-sh\">git shortlog -s -n --all | cat\n</code></pre>\n<h3>นับรวมทั้งหมด</h3>\n<p>ส่วนอันนี้ต้องเล่นท่าหน่อย ดูคำสั่งก่อนเลย</p>\n<pre><code class=\"language-sh\">git shortlog -s | grep -Eo \"[0-9]{1,}\" | awk '{ SUM += $1} END { print SUM }'\n</code></pre>\n<p>มาดูกันมันคืออะไรบ้าง</p>\n<ul>\n<li>\n<p><code>grep</code> เป็นคำสั่งที่ไว้ใช้ทำเกี่ยวกับ Regular Expression โดยชื่อเต็มก็คือ Global Regular Expression Print (พึ่งจะเคยเปิดหานี่แหละ) ส่วน option ของมันก็ต้องขอบอกว่าไม่เข้าใจเหมือนกันว่า <code>-E</code> ใช้ทำอะไร แต่ <code>-o</code> นี่ใช้เพื่อให้มันแสดงเฉพาะ output ที่แมตช์กันแทนที่จะแสดงทั้งบรรทัดเหมือนปกติ สุดท้ายคือ <code>[0-9]{1,}</code> เป็นการบอก <code>grep</code> ว่าให้หาแต่ตัวเลขนะ (<code>[0-9]</code>) และถ้าเป็นตัวเลขติดๆ กันก็เอามาทั้งก้อนเลย (<code>{1,}</code>) ประมาณนั้น</p>\n</li>\n<li>\n<p><code>awk</code> เป็นคำสั่งที่ไว้หา text ที่แมตช์เหมือนกัน และเมื่อเจอแล้วก็จะรันคำสั่งตามที่ได้เขียนไว้ ซึ่งในกรณีนี้คือ <code>'{ SUM += $1} END { print SUM }'</code> สรุปง่ายๆ มันจะเอา text ทั้งหมดมาบวกกันทีละบรรทัดไปเรื่อยๆ จนถึงบรรทัดสุดท้าย จากนั้นค่อยปริ้นท์ผลลัพธ์ออกมา</p>\n</li>\n</ul>\n<p>ที่นี้ก็รู้คำสั่งกันแล้ว ลองไปรันดูดีกว่า ของเราได้ออกมาแบบนี้</p>\n<pre><code class=\"language-sh\">ThesisProject [master] git shortlog -s -n --all | cat\n   149  bluenex\n    27  Bluenex\n    10  tulakann\n     1  Tulakan Ruangrong\n\nThesisProject [master] git shortlog -s --all | grep -Eo \"[0-9]{1,4}\" | awk '{ SUM += $1} END { print SUM }'\n187\n</code></pre>\n<p>นับ thesis repo กันเลยทีเดียว ฮ่าาา นี่ขนาดเก็บผลเสร็จแล้วอะไรแล้วแต่ repo ก็ยัง active อยู่ อันนี้น่าจะยกความดีความชอบให้ git ได้เต็มๆ เลยแหละ เพราะโค้ดมันเป็น singleton มีที่เดียว ไม่ว่าจะทำงานจากเครื่องไหนก็เก็บโค้ดที่อัพเดทแล้วไว้ที่นี่มันก็เลยยังเติบโตมาได้เรื่อยๆ เจอบั๊กก็มาตามแก้ ใส่ issue อะไรก็ช่วยได้มาก สรุปคือถ้าต้องทำงานอะไรก็ตามที่เกี่ยวกับการเขียนโค้ดก็ใช้เหอะ เนาะ</p>\n<h3>ref.</h3>\n<ul>\n<li><a href=\"http://unix.stackexchange.com/questions/4840/adding-numbers-from-the-result-of-a-grep\">Adding numbers from the result of a grep</a></li>\n<li><a href=\"http://askubuntu.com/questions/184204/how-do-i-fetch-only-the-numbers-in-grep\">How Do I fetch only the numbers in grep?</a></li>\n<li><a href=\"http://zanshin.net/2012/06/08/showing-git-commit-counts/\">Showing Git Commit Counts</a></li>\n</ul>\n"}},"__N_SSG":true}