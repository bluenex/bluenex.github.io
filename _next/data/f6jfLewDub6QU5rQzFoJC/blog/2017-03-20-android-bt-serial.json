{"pageProps":{"postData":{"id":"2017-03-20-android-bt-serial","title":"มาลองเขียนแอปแอนดรอยด์เชื่อมต่อกับบลูทูธบน Arduino กัน","date":"20-03-2017 13:17","tags":["android","arduino","diary"],"contentHtml":"<p>บล็อกสั้นวันนี้ขอเสนอการเขียนแอปแอนดรอยด์แบบง่ายๆ ด้วย Xamarin แต่จะว่าเขียนก็ไม่ถูกนะ เพราะก็อปเค้ามาแก้นิดเดียว แฮร่ แต่เนื่องจากโค้ดต้นฉบับเป็น open source ใต้ License Apache 2.0 แถมเราไม่ได้ทำเพื่อใช้แสวงหากำไรอีก ถือว่าเพื่อการศึกษาเนาะ</p>\n<p>เริ่มกันเลย อุปกรณ์ที่เราใช้คือ Arduino Uno + HC-05 + Android 6.0 smart phone โดย HC-05 เป็น bluetooth module ที่เชื่อมต่อกับ Arduino Uno เนื่องจากบล็อกนี้จะบันทึกส่วนของแอปแอนดรอยด์เท่านั้น เพราะฉะนั้น รายละเอียดการต่อบอร์ดบลูทูธเข้ากับ Arduino เอย Arduino sketch เอย ให้ไปตามดูใน <a href=\"http://www.instructables.com/id/Arduino-AND-Bluetooth-HC-05-Connecting-easily/?ALLSTEPS\">Instructables</a> ดังลิงค์ที่แปะไว้ให้นี้เนาะ</p>\n<p>สมมติว่าต่อบอร์ดเสร็จ อัดโค้ดใส่ Arduino เสร็จ จับคู่ HC-05 กับมือถือของเราเสร็จ ขั้นตอนต่อไปเราก็จะมาเริ่มในส่วนของโค้ด Android กัน ในส่วนนี้เราจะใช้ Visual Studio + Xamarin ในการเขียน ซึ่งเราก็จะเขียนแอปง่ายๆ มีสองปุ่มคือเปิดกับปิด เพื่อเปิดและปิด LED ที่มีอยู่บนบอร์ด Arduino อยู่แล้ว อ้อลืมไป ไม่ใช่เขียนแต่เป็นดัดแปลง ถ้ามี Visual Studio แล้วก็ไปโคลน repo นี้มาเลย <a href=\"git@github.com:xamarin/monodroid-samples.git\">xamarin/monodroid-samples</a> แล้วเข้าไปในโฟลเดอร์จะเห็น Bluetooth Chat ก็เข้าไปอีกครั้ง ที่นี้ก็จะมาเริ่มแก้กัน เริ่มจากเปลี่ยน Layout จาก <code>ListView</code> เป็น <code>LinearView</code> เสร็จแล้วก็ใส่ Header text ไปตามสะดวก เช่น <strong>LED SWITCH</strong> ก็ได้ จากนั้นก็ลากปุ่มมาสองปุ่ม ตั้งชื่อเป็นปุ่ม ON กับ OFF ใส่ string กับ id ให้เรียบร้อย จากนั้นก็ไปแก้โค้ดกัน</p>\n<h2>BluetoothChat.cs</h2>\n<p>ก่อนอื่นเพิ่ม <code>const</code> กันก่อนก่อนเข้า method <code>OnCreate()</code> ให้ใส่ led status เข้าไป</p>\n<pre><code class=\"language-cs\">// LED status\nprivate const string LED_ON = \"1\";\nprivate const string LED_OFF = \"0\";\n</code></pre>\n<p>ใน method <code>SetupChat()</code> ให้คอมเม้นต์ให้หมดเหลือไว้แค่ <code>chatService</code> กับ <code>outStringBuffer</code> จากนั้นก็หาน้องปุ่มด้วย <code>id</code> แล้วใส่ event click handler ไปตามนี้</p>\n<pre><code class=\"language-cs\">// Initialize the array adapter for the conversation thread\n//conversationArrayAdapter = new ArrayAdapter&#x3C;string>(this, Resource.Layout.message);\n//conversationView = FindViewById&#x3C;ListView>(Resource.Id.@in);\n//conversationView.Adapter = conversationArrayAdapter;\n\n// Initialize the compose field with a listener for the return key\n//outEditText = FindViewById&#x3C;EditText>(Resource.Id.edit_text_out);\n// The action listener for the EditText widget, to listen for the return key\n//outEditText.EditorAction += delegate (object sender, TextView.EditorActionEventArgs e) {\n//    // If the action is a key-up event on the return key, send the message\n//    if (e.ActionId == ImeAction.ImeNull &#x26;&#x26; e.Event.Action == KeyEventActions.Up)\n//    {\n//        var message = new Java.Lang.String(((TextView)sender).Text);\n//        SendMessage(message);\n//    }\n//};\n\n//// Initialize the send button with a listener that for click events\n//sendButton = FindViewById&#x3C;Button>(Resource.Id.button_send);\n//sendButton.Click += delegate (object sender, EventArgs e) {\n//    // Send a message using content of the edit text widget\n//    var view = FindViewById&#x3C;TextView>(Resource.Id.edit_text_out);\n//    var message = new Java.Lang.String(view.Text);\n//    SendMessage(message);\n//};\n\n// On button\nonButton = FindViewById&#x3C;Button>(Resource.Id.onButton);\nonButton.Click += delegate (object sender, EventArgs e)\n{\n    SendMessage(new Java.Lang.String(LED_ON));\n};\n\n// Off button\noffButton = FindViewById&#x3C;Button>(Resource.Id.offButton);\noffButton.Click += delegate (object sender, EventArgs e)\n{\n    SendMessage(new Java.Lang.String(LED_OFF));\n};\n\n// Initialize the BluetoothChatService to perform bluetooth connections\nchatService = new BluetoothService(this, new MyHandler(this));\n\n// Initialize the buffer for outgoing messages\noutStringBuffer = new StringBuffer(\"\");\n</code></pre>\n<h2>BluetoothService.cs</h2>\n<p>ไฟล์นี้แก้นิดเดียว โดยให้เปลี่ยน UUID ของที่เค้าให้มาเป็น UUID สำหรับอุปกรณ์ serial bluetooth ทั่วไป โค้ดข้างล่างคือคอมเม้นต์อันเก่าแล้วใส่อันใหม่ลงไป ส่วนที่มาของ UUID นี้ไปดูได้ที่ <a href=\"https://developer.android.com/reference/android/bluetooth/BluetoothDevice.html#createInsecureRfcommSocketToServiceRecord(java.util.UUID)\">Android documentation</a></p>\n<pre><code class=\"language-cs\">//private static UUID MY_UUID = UUID.FromString (\"fa87c0d0-afac-11de-8a39-0800200c9a66\");\nprivate static UUID MY_UUID = UUID.FromString(\"00001101-0000-1000-8000-00805F9B34FB\");\n</code></pre>\n<p>เสร็จละ จากนั้นก็เสียบมือถือ debug ดู จะพบ error ขึ้นมาจำนวนหนึ่งเกิดจากการที่ตัวแปรบางตัวขาดๆ เกินๆ ก็ตาม debug ลบๆ คอมเม้นต์ๆ กันเอาตามสัญชาตญาณ</p>\n<p>อนึ่ง บล็อกนี้ออกแนวจดไว้ดูเองจึงไม่เขียนละเอียด ใครผ่านมาอ่านทำตามไม่ได้ก็ต้องขออภัยมา ณ ที่นี้ด้วย หากมีข้อสงสัยเพิ่มเติมติดต่อได้ตามที่อยู่แถบล่างของบล็อกได้เลยฮะ</p>\n"}},"__N_SSG":true}